# Bootcamp Practices

You can save a blank version of this lesson to your computer to run the code chunks yourself by downloading the file below and opening it in your R studio. Come back and check your answers here!

```{r, echo=FALSE, results='hide', message=FALSE, warning=FALSE}

install.packages("downloadthis", repos = "http://cran.us.r-project.org")

library(downloadthis)
```


```{r, echo=FALSE, message=FALSE}
downloadthis::download_file(path = "../_bootcamp_Rmds/bootcamp_practices.Rmd", button_label = "Download file", button_type = "default", has_icon = TRUE, icon = "fa fa-save", self_contained = FALSE)
``` 

# Once you've completed the lesson

::: {.callout-tip collapse="true"}
## Expand To See Solutions


## Bootcamp Lesson 1

### Practice with
- Variables
- Functions
- Printing to the screen

1. Assign the number 500 to the variable numberButterflies
```{r}
numberButterflies <- 500

```


2. Calculate the cubed root of 26 and assign it to the variable y
```{r}
y <- 26^(1/3)
```


3. Print the variable y
```{r}
y
```

## Bootcamp Lesson 2

### Practice with
- Packages
- Accessing specific columns in a data set
- Assigning variables
- Select
- Filtering


1. (Install if you haven't completed lesson 2) and load the tidyverse and palmerpenguins packages. 
```{r}
install.packages("tidyverse", repos = "http://cran.us.r-project.org")
install.packages("palmerpenguins", repos = "http://cran.us.r-project.org")

library("tidyverse")
library("palmerpenguins")
```


2. Assign the bill length column to a variable called penguinBillLength. Remember the data name is penguins. 
```{r}
penguinBillLength <- penguins$bill_length_mm
```


3. Assign the bill depth column to a variable called penguinBillDepth. 
```{r}
penguinBillDepth <- penguins$bill_depth_mm

```

For Questions 4 - 7, you can choose to either use the pipe %>% or not. Either way is great! 

4. Assign only the columns island, bill_length_mm, and bill_depth_mm to a new variable (name it whatever you'd like!). 
```{r}
# standard way
dataSubset <- select(penguins, island, bill_length_mm, bill_depth_mm)

# with the pipe
dataSubset2 <- penguins %>% select(island, bill_length_mm, bill_depth_mm)
```

5. Assign only the columns sex and year to the variable sexByYear. 
```{r}
# standard way
sexByYear <- select(penguins, sex, year)

# with the pipe
sexByYear2 <- penguins %>% select(sex, year)
```


6. Create a subset of the data that includes all the columns for only male Gentoo penguins with flipper lengths greater than 20 mm. 
```{r}
# standard way
longMales <- filter(penguins, sex == "male", flipper_length_mm > 20)

# with the pipe
longMales2 <- penguins %>% filter(sex == "male", flipper_length_mm > 20) 
```


7. Create a subset of the data that includes all penguins on Biscoe island with flipper lengths greater than 20 mm. Remove all of the NA values as well. 
```{r}

myPenguins <- na.omit(filter(penguins, island == "Biscoe", flipper_length_mm > 20))

```


Challenge: Using the pipe %>%, string together two commands with only one line of code to create a data set that includes only the columns: species, sex, and flipper length, with only Adelie penguins whose flippers are greater than 180 mm. 
```{r}
longAdelieSubset <- penguins %>% select(species, sex, flipper_length_mm) %>% filter(species == "Adelie", flipper_length_mm > 180)
```



## Bootcamp Lesson 3

### Practice with
* Packages
* Filtering
* Ggplot

### Instructions for plots
Each plot should have axis labels, a title, and use colors to illustrate the data.


1. (Install if you haven't completed lessons 2 or 3 or practice 2) and load the tidyverse and palmerpenguins packages. 
```{r}
library("tidyverse")
library("palmerpenguins")
```


2. Create a subset of the data that includes all the data from the years 2007 and 2008.
```{r}
earlyYears <- penguins %>% filter(year < 2009)

```


3. Create a box plot of the bill lengths by male and female penguins of all species from the years 2007 and 2008. 
```{r}
ggplot(data = penguins, mapping = aes(x = sex, y = bill_length_mm, fill = sex)) +
  geom_boxplot() +
  labs(x = "Penguin Sex", y = "Bill Length (mm)", title = "Male penguins tend to have longer bills")
```


4. Create a subset of the data that includes only the female penguins. 
```{r}
femaleOnly <- penguins %>% filter(sex == "female")
```


5. Create a box plot of the bill depth by species of only the female penguins. 
```{r}

# here I am using the pipe to put the data into the ggplot function, eliminating the need to say what data to use inside of the function. It's just another way of doing the same thing. 

femaleOnly %>% ggplot(aes(x = species, y = bill_depth_mm, fill = species)) +
  geom_boxplot() +
  labs(x = "Penguin Species", y = "Bill Depth (mm)", title = "Bill depth changes by species")
```


6. Create a scatter plot of the relationship between bill length and bill depth for penguins on only Dream island and color by species.
```{r}
penguins %>% filter(island == "Dream") %>% 
  ggplot(aes(x = bill_length_mm, y = bill_depth_mm, color = species)) +
  geom_point() +
  labs(x = "Bill Length (mm)", y = "Bill Depth (mm)", title = "Is there a relationship between bill depth and bill length of penguins living on Torgersen Island?")
```

:::